name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      target:
        description: "Target platform to build for (optional)"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - ubuntu-latest
          - windows-latest
          - macos-latest

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
        exclude:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
        if: ${{ inputs.target == 'all' || inputs.target == matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Build examples
        run: cargo build --examples --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: steamworks-${{ matrix.target }}
          path: |
            target/debug/libsteamworks*
            target/debug/steamworks*
            target/release/libsteamworks*
            target/release/steamworks*
          if-no-files-found: error
