name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      target:
        description: "Target platform to build for (optional)"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - ubuntu-latest
          - windows-latest
          - macos-latest

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.target == 'all' || github.event.inputs.target == 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ubuntu-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: steamworks-x86_64-unknown-linux-gnu
          path: |
            target/debug/libsteamworks*
            target/debug/steamworks*
            target/release/libsteamworks*
            target/release/steamworks*
          if-no-files-found: error

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    if: ${{ github.event.inputs.target == 'all' || github.event.inputs.target == 'windows-latest' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: steamworks-x86_64-pc-windows-msvc
          path: |
            target/debug/libsteamworks*
            target/debug/steamworks*
            target/release/libsteamworks*
            target/release/steamworks*
          if-no-files-found: error

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    if: ${{ github.event.inputs.target == 'all' || github.event.inputs.target == 'macos-latest' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: macos-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: steamworks-x86_64-apple-darwin
          path: |
            target/debug/libsteamworks*
            target/debug/steamworks*
            target/release/libsteamworks*
            target/release/steamworks*
          if-no-files-found: error
